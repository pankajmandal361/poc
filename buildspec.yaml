#If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
   #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
 runtime-versions:
    docker: 18
     # name: version
 pre_build:
   commands:
     - aws configure set aws_access_key_id AKIAQNLBQZNCGIIJ72FA
     - aws configure set aws_secret_access_key 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
     - echo Logging in to Amazon ECR...
     - aws --version
     - ls
     - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
     - REPOSITORY_URI=028658682692.dkr.ecr.us-east-1.amazonaws.com/nginx-repo
     - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
     - IMAGE_TAG=${COMMIT_HASH:=latest}
 build:
   commands:
    - echo Build started on date
    - echo Building the Docker image...
    - docker build -t nginx-image .
    #- docker image build -f Dockerfile-patient . -t patient-image:latest
    #- docker image build -f Dockerfile-user-management . -t user-management:latest
    #- docker image build -f admin-console-web/Dockerfile admin-console-web/ -t admin-console:latest
    #- docker build -t $REPOSITORY_URI2:latest .
    #- docker build -t $REPOSITORY_URI3:latest .
    - docker image tag nginx-image $REPOSITORY_URI
 post_build:
   commands:
     - echo Build completed on date
     - echo Pushing the Docker images...
     #- docker push $REPOSITORY_URI1:latest
     #- docker push $REPOSITORY_URI2:latest
     #- docker push $REPOSITORY_URI3:latest
     - docker push $REPOSITORY_URI
     - echo Writing image definitions file...
# artifacts:
  #   files: imagedefinitions.json
   # - location
   # - location
 #name: $(date +%Y-%m-%d)
 #discard-paths: yes
 #base-directory: location
#cache:
 #paths:
   # - paths
